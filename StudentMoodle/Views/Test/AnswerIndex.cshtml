@model (List<Answer>, Tasks, Answer)

@{
    ViewData["Title"] = "AnswerIndex";
}

@{
    var model1 = Model.Item1;
    var model2 = Model.Item2;
    var model3 = Model.Item3;
}
<h1>Задание "@model2.Title"</h1>
<h4>Варианты ответов</h4>

<p>
    <input type="button" value="Создать ответ"
           onclick="location.href='@Url.Action("AnswerCreate", "Test", new {tascskey = model2.Id})'" />
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model3.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model3.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model3.isRight)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in model1) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.isRight)
            </td>
            <td>
                @Html.ActionLink("Редактировать ответ", "EditAnswer", new { id=item.Id  }) |
                @Html.ActionLink("Удалить ответ", "AnswerDelete", new { id=item.Id  })
            </td>
        </tr>
}
    </tbody>
</table>

<p>
    <input type="button" value="Назад к заданиям"
           onclick="location.href='@Url.Action("TasksIndex", "Test", new {idtest = model2.idTest})'" />
</p>
